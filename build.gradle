import java.text.SimpleDateFormat

plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

group = "com.uxzylon.satmap"

static def getTime() {
    SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd-HHmm")
    sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
    return sdf.format(new Date()).toString()
}

// Set version to version property if supplied
String shortVersion = null
if (hasProperty('ver')) {
    if (ver.charAt(0) == "v") {
        shortVersion = ver.substring(1).toUpperCase()
    } else {
        shortVersion = ver.toUpperCase()
    }
}

// If the tag includes "-RC-" or no tag is supplied, append "-SNAPSHOT"
int rcIdx
if (shortVersion == null || shortVersion == "") {
    version = getTime() + "-SNAPSHOT"
} else if ((rcIdx = shortVersion.indexOf("-RC-")) != -1) {
    version = shortVersion.substring(0, rcIdx) + "-SNAPSHOT"
} else {
    version = shortVersion
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    /*maven {
        name 'papermc'
        url 'https://repo.papermc.io/repository/maven-public/'
        content {
            includeModule("io.papermc.paper", "paper-api")
            includeModule("io.papermc", "paperlib")
            includeModule("net.md-5", "bungeecord-chat")
        }
    }*/
    maven {
        name = 'spigot'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven {
        name = 'minecraft-repo'
        url = 'https://libraries.minecraft.net/'
    }
    maven {
        name = 'jetbrains'
        url "https://packages.jetbrains.team/maven/p/jcs/maven"
    }
    maven {
        url = 'https://ci.mg-dev.eu/plugin/repository/everything'
    }

    mavenCentral()
}

dependencies {
    // compileOnly 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT'
    compileOnly 'org.jetbrains:annotations:24.0.0'
    compileOnly 'com.mojang:authlib:1.6.25'
    compileOnly 'com.bergerkiller.bukkit:BKCommonLib:1.20.4-v1'
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
    // implementation 'io.papermc:paperlib:1.0.8'
    // testImplementation 'io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.3'
}

test {
    useJUnitPlatform()
}

processResources {
    filesMatching("**/plugin.yml") {
        expand ( NAME: rootProject.name, VERSION: version, PACKAGE: project.group.toString() )
    }
}

shadowJar {
    archiveClassifier.set('')
    // relocate 'io.papermc.lib', 'shadow.io.papermc.paperlib'
    minimize()
}

// Disable jar and replace with shadowJar
jar.enabled = false
assemble.dependsOn(shadowJar)

tasks.register('printProjectName') {
    doLast {
        println rootProject.name
    }
}

tasks.register('release') {
    dependsOn build

    doLast {
        if (!version.endsWith("-SNAPSHOT")) {
            // Rename final JAR to trim off version information
            shadowJar.archiveFile.get().getAsFile()
                    .renameTo(layout.buildDirectory.get().toString() + File.separator + 'libs' + File.separator
                            + rootProject.name + '.jar')
        }
    }
}